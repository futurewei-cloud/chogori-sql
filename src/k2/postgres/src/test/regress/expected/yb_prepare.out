-- Regression tests for prepareable statements. We query the content
-- of the pg_prepared_statements view as prepared statements are
-- created and removed.
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name | statement | parameter_types
------+-----------+-----------------
(0 rows)

PREPARE q1 AS SELECT 1 AS a;
EXECUTE q1;
 a
---
 1
(1 row)

SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name |          statement           | parameter_types
------+------------------------------+-----------------
 q1   | PREPARE q1 AS SELECT 1 AS a; | {}
(1 row)

-- should fail
PREPARE q1 AS SELECT 2;
ERROR:  prepared statement "q1" already exists
-- should succeed
DEALLOCATE q1;
PREPARE q1 AS SELECT 2;
EXECUTE q1;
 ?column?
----------
        2
(1 row)

PREPARE q2 AS SELECT 2 AS b;
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name |          statement           | parameter_types
------+------------------------------+-----------------
 q1   | PREPARE q1 AS SELECT 2;      | {}
 q2   | PREPARE q2 AS SELECT 2 AS b; | {}
(2 rows)

-- sql92 syntax
DEALLOCATE PREPARE q1;
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name |          statement           | parameter_types
------+------------------------------+-----------------
 q2   | PREPARE q2 AS SELECT 2 AS b; | {}
(1 row)

DEALLOCATE PREPARE q2;
-- the view should return the empty set again
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name | statement | parameter_types
------+-----------+-----------------
(0 rows)

-- parameterized queries
PREPARE q2(text) AS
	SELECT datname, datistemplate, datallowconn
	FROM pg_database WHERE datname = $1;
EXECUTE q2('postgres');
 datname  | datistemplate | datallowconn
----------+---------------+--------------
 postgres | f             | t
(1 row)

-- invalid type
PREPARE q3(nonexistenttype) AS SELECT $1;
ERROR:  type "nonexistenttype" does not exist
LINE 1: PREPARE q3(nonexistenttype) AS SELECT $1;
                   ^
-- unknown or unspecified parameter types: should succeed
PREPARE q4 AS
    SELECT * FROM pg_database WHERE oid = $1 AND datname = $2;
PREPARE q5(unknown) AS
    SELECT * FROM pg_namespace WHERE nspname = $1;
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name |                           statement                            | parameter_types
------+----------------------------------------------------------------+-----------------
 q2   | PREPARE q2(text) AS                                           +| {text}
      |         SELECT datname, datistemplate, datallowconn           +|
      |         FROM pg_database WHERE datname = $1;                   |
 q4   | PREPARE q4 AS                                                 +| {oid,name}
      |     SELECT * FROM pg_database WHERE oid = $1 AND datname = $2; |
 q5   | PREPARE q5(unknown) AS                                        +| {name}
      |     SELECT * FROM pg_namespace WHERE nspname = $1;             |
(3 rows)

-- test DEALLOCATE ALL;
DEALLOCATE ALL;
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name | statement | parameter_types
------+-----------+-----------------
(0 rows)
